{"cells":[{"source":"![arlington-research-kN_kViDchA0-unsplash](arlington-research-kN_kViDchA0-unsplash.jpg)\n\nIn today’s fast-paced work environment, understanding the interplay between lifestyle factors and work performance is more crucial than ever. In this project, I wanted to explore how key variables—mood, exercise, sleep (including both hours slept and sleep quality), and screen time before bed—affect work performance.\n\nThe project is built on the premise that our daily habits and behaviors significantly influence our efficiency and cognitive function at work. For example, regular exercise may boost mood and energy levels, while quality sleep is essential for mental clarity and decision-making. Conversely, excessive screen time before bed could disrupt sleep quality and reduce overall performance.\n\nUltimately, I wanted to investigate whether there were lifestyle choices that impacted work outcomes that can be used as practical recommendations for individuals srtiving to achieve a positive work-life balance. \n\n_It should be kept in mind that this is a fictional data set._\n\n[This data set was downloaded from Kaggle. ](https://www.kaggle.com/datasets/adilshamim8/sleep-cycle-and-productivity)\n","metadata":{},"cell_type":"markdown","id":"7163eb38-4231-4de5-bfc1-f4db6e228e2a"},{"source":"SELECT * \nFROM sleep_cycle_productivity.csv\nLIMIT 5;","metadata":{"customType":"sql","dataFrameVariableName":"df8","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":97,"lastExecutedAt":1742416822532,"lastExecutedByKernel":"807ac9b3-420e-43c7-8314-84e761a52c4a","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT * \nFROM sleep_cycle_productivity.csv\nLIMIT 5;","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"quickFilterText":""}}}},"cell_type":"code","id":"6495b824-40fa-4b5a-b010-a8738f9f0dfa","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"Date","type":"datetime","tz":"UTC"},{"name":"Person_ID","type":"integer"},{"name":"Age","type":"integer"},{"name":"Gender","type":"string"},{"name":"Sleep Start Time","type":"number"},{"name":"Sleep End Time","type":"number"},{"name":"Total Sleep Hours","type":"number"},{"name":"Sleep Quality","type":"integer"},{"name":"Exercise (mins/day)","type":"integer"},{"name":"Caffeine Intake (mg)","type":"integer"},{"name":"Screen Time Before Bed (mins)","type":"integer"},{"name":"Work Hours (hrs/day)","type":"number"},{"name":"Productivity Score","type":"integer"},{"name":"Mood Score","type":"integer"},{"name":"Stress Level","type":"integer"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0,1,2,3,4],"Date":["2024-04-12T00:00:00.000","2024-11-04T00:00:00.000","2024-08-31T00:00:00.000","2024-02-22T00:00:00.000","2024-02-23T00:00:00.000"],"Person_ID":[1860,1769,2528,8041,4843],"Age":[32,41,20,37,46],"Gender":["Other","Female","Male","Other","Other"],"Sleep Start Time":[23.33,21.02,22.1,23.1,21.42],"Sleep End Time":[4.61,2.43,3.45,6.65,4.17],"Total Sleep Hours":[5.28,5.41,5.35,7.55,6.75],"Sleep Quality":[3,5,7,8,10],"Exercise (mins/day)":[86,32,17,46,61],"Caffeine Intake (mg)":[87,21,88,34,269],"Screen Time Before Bed (mins)":[116,88,59,80,94],"Work Hours (hrs/day)":[8.8089200939,6.3298331216,8.5063057428,6.0702398528,11.3749938802],"Productivity Score":[8,10,10,8,8],"Mood Score":[3,3,9,4,7],"Stress Level":[6,7,10,2,9]}},"total_rows":5,"truncation_type":null},"text/plain":"                       Date  Person_ID  ...  Mood Score Stress Level\n0 2024-04-12 00:00:00+00:00       1860  ...           3            6\n1 2024-11-04 00:00:00+00:00       1769  ...           3            7\n2 2024-08-31 00:00:00+00:00       2528  ...           9           10\n3 2024-02-22 00:00:00+00:00       8041  ...           4            2\n4 2024-02-23 00:00:00+00:00       4843  ...           7            9\n\n[5 rows x 15 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Person_ID</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Sleep Start Time</th>\n      <th>Sleep End Time</th>\n      <th>Total Sleep Hours</th>\n      <th>Sleep Quality</th>\n      <th>Exercise (mins/day)</th>\n      <th>Caffeine Intake (mg)</th>\n      <th>Screen Time Before Bed (mins)</th>\n      <th>Work Hours (hrs/day)</th>\n      <th>Productivity Score</th>\n      <th>Mood Score</th>\n      <th>Stress Level</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2024-04-12 00:00:00+00:00</td>\n      <td>1860</td>\n      <td>32</td>\n      <td>Other</td>\n      <td>23.33</td>\n      <td>4.61</td>\n      <td>5.28</td>\n      <td>3</td>\n      <td>86</td>\n      <td>87</td>\n      <td>116</td>\n      <td>8.808920</td>\n      <td>8</td>\n      <td>3</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2024-11-04 00:00:00+00:00</td>\n      <td>1769</td>\n      <td>41</td>\n      <td>Female</td>\n      <td>21.02</td>\n      <td>2.43</td>\n      <td>5.41</td>\n      <td>5</td>\n      <td>32</td>\n      <td>21</td>\n      <td>88</td>\n      <td>6.329833</td>\n      <td>10</td>\n      <td>3</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2024-08-31 00:00:00+00:00</td>\n      <td>2528</td>\n      <td>20</td>\n      <td>Male</td>\n      <td>22.10</td>\n      <td>3.45</td>\n      <td>5.35</td>\n      <td>7</td>\n      <td>17</td>\n      <td>88</td>\n      <td>59</td>\n      <td>8.506306</td>\n      <td>10</td>\n      <td>9</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2024-02-22 00:00:00+00:00</td>\n      <td>8041</td>\n      <td>37</td>\n      <td>Other</td>\n      <td>23.10</td>\n      <td>6.65</td>\n      <td>7.55</td>\n      <td>8</td>\n      <td>46</td>\n      <td>34</td>\n      <td>80</td>\n      <td>6.070240</td>\n      <td>8</td>\n      <td>4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2024-02-23 00:00:00+00:00</td>\n      <td>4843</td>\n      <td>46</td>\n      <td>Other</td>\n      <td>21.42</td>\n      <td>4.17</td>\n      <td>6.75</td>\n      <td>10</td>\n      <td>61</td>\n      <td>269</td>\n      <td>94</td>\n      <td>11.374994</td>\n      <td>8</td>\n      <td>7</td>\n      <td>9</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":2,"@datacamp/metadata":{"executedQuery":"SELECT * \nFROM sleep_cycle_productivity.csv\nLIMIT 5;","executedQueryParameters":[]}}],"execution_count":2},{"source":"Before filtering and sorting, I want to check the overall trends in the data such as: \n\n- What does the data consist of? Since the data is self-reported, I wanted to know what percent of the participants have multiple submissions vs single submissions. \n- On average, how much sleep do people have? \n- Is there a day of the week where people get more sleep? \n\nThen, I would focus on the following:\n-  How do people self-report their productivity? What percent of the participants fall into top, middle, and low productivity groups? \n-  How much sleep did top performers(most productivity) have? How much sleep did middle and lower performers have? \n-  Does productivity correlate with any factors reported in this study? \n-  Does work stage correlate with any of these factors? ","metadata":{},"cell_type":"markdown","id":"bbf1f6df-c0de-400e-b7b5-36ea474413fc"},{"source":"First, I wanted to make sure that there were no missing values in the productivity scores since I will use those scores to determine work performance.","metadata":{},"cell_type":"markdown","id":"072acabb-4353-4ce2-b4ae-2dcff44c1f1f"},{"source":"SELECT *\nFROM sleep_cycle_productivity.csv\nWHERE \"Productivity Score\" IS NULL;","metadata":{"customType":"sql","dataFrameVariableName":"df1","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":98,"lastExecutedAt":1742423557055,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT *\nFROM sleep_cycle_productivity.csv\nWHERE \"Productivity Score\" IS NULL;","outputsMetadata":{"0":{"height":38,"type":"dataFrame","tableState":{"quickFilterText":""}}}},"cell_type":"code","id":"1381f352-f921-496d-b17e-b9ba2b45d980","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"Date","type":"datetime","tz":"UTC"},{"name":"Person_ID","type":"integer"},{"name":"Age","type":"integer"},{"name":"Gender","type":"string"},{"name":"Sleep Start Time","type":"number"},{"name":"Sleep End Time","type":"number"},{"name":"Total Sleep Hours","type":"number"},{"name":"Sleep Quality","type":"integer"},{"name":"Exercise (mins/day)","type":"integer"},{"name":"Caffeine Intake (mg)","type":"integer"},{"name":"Screen Time Before Bed (mins)","type":"integer"},{"name":"Work Hours (hrs/day)","type":"number"},{"name":"Productivity Score","type":"integer"},{"name":"Mood Score","type":"integer"},{"name":"Stress Level","type":"integer"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[],"Date":[],"Person_ID":[],"Age":[],"Gender":[],"Sleep Start Time":[],"Sleep End Time":[],"Total Sleep Hours":[],"Sleep Quality":[],"Exercise (mins/day)":[],"Caffeine Intake (mg)":[],"Screen Time Before Bed (mins)":[],"Work Hours (hrs/day)":[],"Productivity Score":[],"Mood Score":[],"Stress Level":[]}},"total_rows":0,"truncation_type":null},"text/plain":"Empty DataFrame\nColumns: [Date, Person_ID, Age, Gender, Sleep Start Time, Sleep End Time, Total Sleep Hours, Sleep Quality, Exercise (mins/day), Caffeine Intake (mg), Screen Time Before Bed (mins), Work Hours (hrs/day), Productivity Score, Mood Score, Stress Level]\nIndex: []","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Date</th>\n      <th>Person_ID</th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>Sleep Start Time</th>\n      <th>Sleep End Time</th>\n      <th>Total Sleep Hours</th>\n      <th>Sleep Quality</th>\n      <th>Exercise (mins/day)</th>\n      <th>Caffeine Intake (mg)</th>\n      <th>Screen Time Before Bed (mins)</th>\n      <th>Work Hours (hrs/day)</th>\n      <th>Productivity Score</th>\n      <th>Mood Score</th>\n      <th>Stress Level</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":15,"@datacamp/metadata":{"executedQuery":"SELECT *\nFROM sleep_cycle_productivity.csv\nWHERE \"Productivity Score\" IS NULL;","executedQueryParameters":[]}}],"execution_count":15},{"source":"Next, I wanted to get an overall idea of what the participant input was. For this, I wanted to know if 1 participant submitted information multiple times. ","metadata":{},"cell_type":"markdown","id":"899b9ca2-2d4a-4abc-8d99-3a05d8083efe"},{"source":"SELECT\n\tCOUNT(*) AS total_partipants,\n\tCOUNT(DISTINCT person_id) AS unique_ids,\n\tROUND(COUNT(DISTINCT person_id)/COUNT(person_id)*100,1) AS percent_unique_participants\nFROM sleep_cycle_productivity.csv;","metadata":{"customType":"sql","dataFrameVariableName":"df2","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":88,"lastExecutedAt":1742424159270,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT\n\tCOUNT(*) AS total_partipants,\n\tCOUNT(DISTINCT person_id) AS unique_ids,\n\tROUND(COUNT(DISTINCT person_id)/COUNT(person_id)*100,1) AS percent_unique_participants\nFROM sleep_cycle_productivity.csv;","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"quickFilterText":"","customFilter":{"const":{"type":"boolean","valid":true,"value":true},"id":"d8f6823e-0a6b-4709-ba06-e489cfb68130","nodeType":"const"}}}}},"cell_type":"code","id":"ec0cae69-751e-4550-9e03-94d820dae908","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"total_partipants","type":"integer"},{"name":"unique_ids","type":"integer"},{"name":"percent_unique_participants","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0],"total_partipants":[5000],"unique_ids":[3858],"percent_unique_participants":[77.2]}},"total_rows":1,"truncation_type":null},"text/plain":"   total_partipants  unique_ids  percent_unique_participants\n0              5000        3858                         77.2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_partipants</th>\n      <th>unique_ids</th>\n      <th>percent_unique_participants</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5000</td>\n      <td>3858</td>\n      <td>77.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":17,"@datacamp/metadata":{"executedQuery":"SELECT\n\tCOUNT(*) AS total_partipants,\n\tCOUNT(DISTINCT person_id) AS unique_ids,\n\tROUND(COUNT(DISTINCT person_id)/COUNT(person_id)*100,1) AS percent_unique_participants\nFROM sleep_cycle_productivity.csv;","executedQueryParameters":[]}}],"execution_count":17},{"source":"From this, we can see that of the 5000 submissions, 3858 submissions (77.2%) were unique submissions, meaning that the remaining 22.8% are multiple submissions.   ","metadata":{},"cell_type":"markdown","id":"c1696352-672b-4ea4-93d9-7793fc9fc1c8"},{"source":"-- On average, how much sleep did participants have?\nSELECT \n\tROUND(AVG(\"Total Sleep Hours\"),2) AS average_hours_slept,\n\tSTDDEV(\"Total Sleep Hours\") AS std_dev,\n\tVARIANCE(\"Total Sleep Hours\") AS variance\nFROM sleep_cycle_productivity.csv;\n","metadata":{"customType":"sql","dataFrameVariableName":"df3","initial":false,"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"integrationExample":{"example":"-- Explore the data in the table\nSELECT *\nFROM 'sleep_cycle_productivity.csv'\nLIMIT 5","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"}},"executionCancelledAt":null,"executionTime":88,"lastExecutedAt":1742423494709,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"-- On average, how much sleep did participants have?\nSELECT \n\tROUND(AVG(\"Total Sleep Hours\"),2) AS average_hours_slept,\n\tSTDDEV(\"Total Sleep Hours\") AS std_dev,\n\tVARIANCE(\"Total Sleep Hours\") AS variance\nFROM sleep_cycle_productivity.csv;\n","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"quickFilterText":"","customFilter":{"const":{"type":"boolean","valid":true,"value":true},"id":"d8f6823e-0a6b-4709-ba06-e489cfb68130","nodeType":"const"}}}}},"id":"c3561c1b-f5ff-42ba-9771-f6e0f2f326c8","cell_type":"code","execution_count":14,"outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"average_hours_slept","type":"number"},{"name":"std_dev","type":"number"},{"name":"variance","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0],"average_hours_slept":[6.97],"std_dev":[1.4540327619],"variance":[2.1142112727]}},"total_rows":1,"truncation_type":null},"text/plain":"   average_hours_slept   std_dev  variance\n0                 6.97  1.454033  2.114211","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>average_hours_slept</th>\n      <th>std_dev</th>\n      <th>variance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>6.97</td>\n      <td>1.454033</td>\n      <td>2.114211</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":14,"@datacamp/metadata":{"executedQuery":"-- On average, how much sleep did participants have?\nSELECT \n\tROUND(AVG(\"Total Sleep Hours\"),2) AS average_hours_slept,\n\tSTDDEV(\"Total Sleep Hours\") AS std_dev,\n\tVARIANCE(\"Total Sleep Hours\") AS variance\nFROM sleep_cycle_productivity.csv;","executedQueryParameters":[]}}]},{"source":"On average, particpants sleep ~7 hours a night, which is in line with the national average according to the [CDC](https://www.cdc.gov/sleep/data-research/facts-stats/adults-sleep-facts-and-stats.html). ","metadata":{},"cell_type":"markdown","id":"906c007e-da74-4b37-890b-18e90b4a47e7"},{"source":"-- Is there a day of the week where people get more sleep?\nSELECT \n\tEXTRACT('DOW' FROM \"Date\") AS day_of_week,\n\tROUND(AVG(\"Total Sleep Hours\"),1) AS total_hours_slept\nFROM sleep_cycle_productivity.csv\nGROUP BY day_of_week;\n--Note: 0=Sunday, 6= Saturday","metadata":{"customType":"sql","dataFrameVariableName":"df4","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":88,"lastExecutedAt":1742423239820,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"-- Is there a day of the week where people get more sleep?\nSELECT \n\tEXTRACT('DOW' FROM \"Date\") AS day_of_week,\n\tROUND(AVG(\"Total Sleep Hours\"),1) AS total_hours_slept\nFROM sleep_cycle_productivity.csv\nGROUP BY day_of_week;\n--Note: 0=Sunday, 6= Saturday","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"customFilter":{"const":{"type":"boolean","valid":true,"value":true},"id":"d8f6823e-0a6b-4709-ba06-e489cfb68130","nodeType":"const"},"quickFilterText":""}}}},"cell_type":"code","id":"587d942f-f1df-4703-af5c-0fe7b15a7184","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"day_of_week","type":"integer"},{"name":"total_hours_slept","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0,1,2,3,4,5,6],"day_of_week":[0,1,2,3,4,5,6],"total_hours_slept":[6.9,7.1,7,6.9,6.9,6.9,7]}},"total_rows":7,"truncation_type":null},"text/plain":"   day_of_week  total_hours_slept\n0            0                6.9\n1            1                7.1\n2            2                7.0\n3            3                6.9\n4            4                6.9\n5            5                6.9\n6            6                7.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>day_of_week</th>\n      <th>total_hours_slept</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>6.9</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>7.1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>7.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>6.9</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>6.9</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>5</td>\n      <td>6.9</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>6</td>\n      <td>7.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":11,"@datacamp/metadata":{"executedQuery":"-- Is there a day of the week where people get more sleep?\nSELECT \n\tEXTRACT('DOW' FROM \"Date\") AS day_of_week,\n\tROUND(AVG(\"Total Sleep Hours\"),1) AS total_hours_slept\nFROM sleep_cycle_productivity.csv\nGROUP BY day_of_week;\n--Note: 0=Sunday, 6= Saturday","executedQueryParameters":[]}}],"execution_count":11},{"source":"Surprisingly, there is no correlation between the day of the week and the amount of sleep that particpants slept.\n\nNext, I split the particpants into 4 groups based on their productivity scores: high productivity (9-10), good productivity (7-8), mediocre productivity (4-6), and poor productivity (1-3) and further investigated trends. ","metadata":{},"cell_type":"markdown","id":"093e9db1-c49a-45b7-b8de-2374766e326d"},{"source":"-- How many people consider themselves to have high, good, mediocre, and poor productivity\nSELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'mediocre'\n\t\t ELSE 'poor' END AS performance,\n\tROUND((COUNT(*)/5000)*100,2) AS percent_total --Number of participants: 5000\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","metadata":{"customType":"sql","dataFrameVariableName":"df5","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":98,"lastExecutedAt":1742424893393,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'medicore'\n\t\t ELSE 'poor' END AS performance,\n\tROUND((COUNT(*)/5000)*100,2) AS percent_total --Number of participants: 5000\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"customFilter":{"const":{"type":"boolean","valid":true,"value":true},"id":"d8f6823e-0a6b-4709-ba06-e489cfb68130","nodeType":"const"},"quickFilterText":""}}}},"cell_type":"code","id":"7dd46279-d044-4ab2-bcbf-a5151afab4ed","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"performance","type":"string"},{"name":"percent_total","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0,1,2,3],"performance":["poor","good","high","medicore"],"percent_total":[28.56,20.36,21.98,29.1]}},"total_rows":4,"truncation_type":null},"text/plain":"  performance  percent_total\n0        poor          28.56\n1        good          20.36\n2        high          21.98\n3    medicore          29.10","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>performance</th>\n      <th>percent_total</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>poor</td>\n      <td>28.56</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>good</td>\n      <td>20.36</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>high</td>\n      <td>21.98</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>medicore</td>\n      <td>29.10</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":26,"@datacamp/metadata":{"executedQuery":"SELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'medicore'\n\t\t ELSE 'poor' END AS performance,\n\tROUND((COUNT(*)/5000)*100,2) AS percent_total --Number of participants: 5000\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","executedQueryParameters":[]}}],"execution_count":26},{"source":"From this we can see that the majority of participants believe themselves to have poor (~28.6%) and mediocre productivity (~29.1%) consisting of in 57.7% of the total participants. While the remaining 42.3% of the participants believe themselves to have high (~22.0%) and good (~20.3%) productivity.","metadata":{},"cell_type":"markdown","id":"cbc6c21f-0c59-4c98-bdfc-042e68ca5e07"},{"source":"SELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'mediocre'\n\t\t ELSE 'poor' END AS performance,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","cell_type":"code","id":"6f4c7b76-02b2-4bef-9f3c-99d7b657f81b","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"performance","type":"string"},{"name":"avg_hours_slept","type":"number"},{"name":"avg_sleep_quality","type":"number"},{"name":"avg_exercise_mins_day","type":"number"},{"name":"avg_caffine_intake","type":"number"},{"name":"avg_screentime_before_bed","type":"number"},{"name":"average_work_hrs","type":"number"},{"name":"average_mood_score","type":"number"},{"name":"average_stress_level","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0,1,2,3],"performance":["poor","mediocre","good","high"],"avg_hours_slept":[6.98,6.89,7.06,7],"avg_sleep_quality":[5.59,5.44,5.5,5.57],"avg_exercise_mins_day":[44.91,43.78,43.33,43.56],"avg_caffine_intake":[146.05,145.98,147.29,148.01],"avg_screentime_before_bed":[89.65,94.45,88.28,92.62],"average_work_hrs":[7.97,8.08,7.93,7.95],"average_mood_score":[5.41,5.36,5.4,5.31],"average_stress_level":[5.55,5.58,5.48,5.57]}},"total_rows":4,"truncation_type":null},"text/plain":"  performance  avg_hours_slept  ...  average_mood_score  average_stress_level\n0        poor             6.98  ...                5.41                  5.55\n1    mediocre             6.89  ...                5.36                  5.58\n2        good             7.06  ...                5.40                  5.48\n3        high             7.00  ...                5.31                  5.57\n\n[4 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>performance</th>\n      <th>avg_hours_slept</th>\n      <th>avg_sleep_quality</th>\n      <th>avg_exercise_mins_day</th>\n      <th>avg_caffine_intake</th>\n      <th>avg_screentime_before_bed</th>\n      <th>average_work_hrs</th>\n      <th>average_mood_score</th>\n      <th>average_stress_level</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>poor</td>\n      <td>6.98</td>\n      <td>5.59</td>\n      <td>44.91</td>\n      <td>146.05</td>\n      <td>89.65</td>\n      <td>7.97</td>\n      <td>5.41</td>\n      <td>5.55</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>mediocre</td>\n      <td>6.89</td>\n      <td>5.44</td>\n      <td>43.78</td>\n      <td>145.98</td>\n      <td>94.45</td>\n      <td>8.08</td>\n      <td>5.36</td>\n      <td>5.58</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>good</td>\n      <td>7.06</td>\n      <td>5.50</td>\n      <td>43.33</td>\n      <td>147.29</td>\n      <td>88.28</td>\n      <td>7.93</td>\n      <td>5.40</td>\n      <td>5.48</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>high</td>\n      <td>7.00</td>\n      <td>5.57</td>\n      <td>43.56</td>\n      <td>148.01</td>\n      <td>92.62</td>\n      <td>7.95</td>\n      <td>5.31</td>\n      <td>5.57</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":27,"@datacamp/metadata":{"executedQuery":"SELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'mediocre'\n\t\t ELSE 'poor' END AS performance,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","executedQueryParameters":[]}}],"execution_count":27,"metadata":{"customType":"sql","dataFrameVariableName":"df6","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":106,"lastExecutedAt":1742426164079,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT \n\tCASE WHEN \"Productivity Score\" BETWEEN 9 AND 10 THEN 'high'\n\t\t WHEN \"Productivity Score\" BETWEEN 7 AND 8 THEN 'good'\n\t\t WHEN \"Productivity Score\" BETWEEN 4 AND 6 THEN 'mediocre'\n\t\t ELSE 'poor' END AS performance,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY performance;","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"customFilter":{"const":{"type":"boolean","valid":true,"value":true},"id":"bd38cb76-65de-44c3-bd51-a4c0cc110e12","nodeType":"const"},"quickFilterText":""}}}}},{"source":"Surprisingly, there looks like there aren't any overarching trends between productivity and the data provided- mood, sleep, sleep quality, and exercise. \n\nInstead of looking at productivity, let's look to see if career stage effects outcomes. ","metadata":{},"cell_type":"markdown","id":"71329f93-52b9-4d90-8a9e-7aef027d44a8"},{"source":"SELECT \n\tCASE WHEN age BETWEEN 18 AND 24 THEN 'Young Adult'\n\t\tWHEN age BETWEEN 25 AND 34 THEN 'Early Career'\n\t\tWHEN age BETWEEN 35 AND 44 THEN 'Mid-Career'\n\t\tWHEN age BETWEEN 45 AND 54 THEN 'Late Adult'\n    ELSE 'Pre-retirement' END as career_stage,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY career_stage;","cell_type":"code","id":"51daa0f3-2be4-45e6-ad4d-6eaa52d0fdd1","outputs":[{"output_type":"execute_result","data":{"application/com.datacamp.data-table.v2+json":{"table":{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"career_stage","type":"string"},{"name":"avg_hours_slept","type":"number"},{"name":"avg_sleep_quality","type":"number"},{"name":"avg_exercise_mins_day","type":"number"},{"name":"avg_caffine_intake","type":"number"},{"name":"avg_screentime_before_bed","type":"number"},{"name":"average_work_hrs","type":"number"},{"name":"average_mood_score","type":"number"},{"name":"average_stress_level","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":{"index":[0,1,2,3,4],"career_stage":["Mid-Career","Young Adult","Late Adult","Pre-retirement","Early Career"],"avg_hours_slept":[6.91,6.96,6.99,6.93,7.05],"avg_sleep_quality":[5.61,5.49,5.4,5.56,5.55],"avg_exercise_mins_day":[43.82,44.2,44.48,44.58,43.06],"avg_caffine_intake":[146.33,147.23,149.67,142.72,145.9],"avg_screentime_before_bed":[91.84,91.24,89.87,91.61,92.61],"average_work_hrs":[8.01,7.94,7.97,8.04,7.99],"average_mood_score":[5.39,5.43,5.37,5.41,5.29],"average_stress_level":[5.49,5.68,5.45,5.57,5.6]}},"total_rows":5,"truncation_type":null},"text/plain":"     career_stage  avg_hours_slept  ...  average_mood_score  average_stress_level\n0      Mid-Career             6.91  ...                5.39                  5.49\n1     Young Adult             6.96  ...                5.43                  5.68\n2      Late Adult             6.99  ...                5.37                  5.45\n3  Pre-retirement             6.93  ...                5.41                  5.57\n4    Early Career             7.05  ...                5.29                  5.60\n\n[5 rows x 9 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>career_stage</th>\n      <th>avg_hours_slept</th>\n      <th>avg_sleep_quality</th>\n      <th>avg_exercise_mins_day</th>\n      <th>avg_caffine_intake</th>\n      <th>avg_screentime_before_bed</th>\n      <th>average_work_hrs</th>\n      <th>average_mood_score</th>\n      <th>average_stress_level</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Mid-Career</td>\n      <td>6.91</td>\n      <td>5.61</td>\n      <td>43.82</td>\n      <td>146.33</td>\n      <td>91.84</td>\n      <td>8.01</td>\n      <td>5.39</td>\n      <td>5.49</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Young Adult</td>\n      <td>6.96</td>\n      <td>5.49</td>\n      <td>44.20</td>\n      <td>147.23</td>\n      <td>91.24</td>\n      <td>7.94</td>\n      <td>5.43</td>\n      <td>5.68</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Late Adult</td>\n      <td>6.99</td>\n      <td>5.40</td>\n      <td>44.48</td>\n      <td>149.67</td>\n      <td>89.87</td>\n      <td>7.97</td>\n      <td>5.37</td>\n      <td>5.45</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Pre-retirement</td>\n      <td>6.93</td>\n      <td>5.56</td>\n      <td>44.58</td>\n      <td>142.72</td>\n      <td>91.61</td>\n      <td>8.04</td>\n      <td>5.41</td>\n      <td>5.57</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Early Career</td>\n      <td>7.05</td>\n      <td>5.55</td>\n      <td>43.06</td>\n      <td>145.90</td>\n      <td>92.61</td>\n      <td>7.99</td>\n      <td>5.29</td>\n      <td>5.60</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{"application/com.datacamp.data-table.v2+json":{"status":"success"}},"execution_count":30,"@datacamp/metadata":{"executedQuery":"SELECT \n\tCASE WHEN age BETWEEN 18 AND 24 THEN 'Young Adult'\n\t\tWHEN age BETWEEN 25 AND 34 THEN 'Early Career'\n\t\tWHEN age BETWEEN 35 AND 44 THEN 'Mid-Career'\n\t\tWHEN age BETWEEN 45 AND 54 THEN 'Late Adult'\n    ELSE 'Pre-retirement' END as career_stage,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY career_stage;","executedQueryParameters":[]}}],"metadata":{"customType":"sql","dataFrameVariableName":"df7","sqlCellMode":"dataFrame","sqlSource":{"integrationId":"4b740fef-5c6f-4efa-84d9-fa25c64b0691","integrationType":"files","type":"integration"},"executionCancelledAt":null,"executionTime":106,"lastExecutedAt":1742426716517,"lastExecutedByKernel":"ffeca603-987e-431e-b3d4-e8678b536acc","lastScheduledRunId":null,"lastSuccessfullyExecutedCode":"SELECT \n\tCASE WHEN age BETWEEN 18 AND 24 THEN 'Young Adult'\n\t\tWHEN age BETWEEN 25 AND 34 THEN 'Early Career'\n\t\tWHEN age BETWEEN 35 AND 44 THEN 'Mid-Career'\n\t\tWHEN age BETWEEN 45 AND 54 THEN 'Late Adult'\n    ELSE 'Pre-retirement' END as career_stage,\n\tROUND(AVG(\"Total Sleep Hours\"),2) AS avg_hours_slept,\n\tROUND(AVG(\"Sleep Quality\"),2) AS avg_sleep_quality,\n\tROUND(AVG(\"Exercise (mins/day)\"),2) AS avg_exercise_mins_day,\n\tROUND(AVG(\"Caffeine Intake (mg)\"),2) AS avg_caffine_intake,\n\tROUND(AVG(\"Screen Time Before Bed (mins)\"),2) AS avg_screentime_before_bed, \n\tROUND(AVG(\"Work Hours (hrs/day)\"),2) AS average_work_hrs,\n\tROUND(AVG(\"Mood Score\"),2) AS average_mood_score,\n\tROUND(AVG(\"Stress Level\"),2) AS average_stress_level\nFROM sleep_cycle_productivity.csv\nGROUP BY career_stage;","outputsMetadata":{"0":{"height":501,"type":"dataFrame","tableState":{"quickFilterText":""}}}},"execution_count":30},{"source":"According to the data, there are no identifiable trends between career stage and the data provided. \n\nThese results could be due to the fact that this is a synthetic data set which may not be representative of real-world trends. Additonally, if these were actual participants, these values were modeled to be \"self-reported\", which may skew the data on productivity scoring. ","metadata":{},"cell_type":"markdown","id":"c97ae7a2-77f5-4217-ae35-10359ba1419f"}],"metadata":{"colab":{"name":"Welcome to DataCamp Workspaces.ipynb","provenance":[]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"editor":"DataLab"},"nbformat":4,"nbformat_minor":5}